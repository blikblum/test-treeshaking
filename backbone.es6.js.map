{"version":3,"sources":["backbone.js"],"names":[],"mappings":"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","file":"backbone.es6.js","sourcesContent":["//     Backbone.js 1.3.3\r\n\r\n//     (c) 2010-2017 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\r\nimport {uniqueId, clone, extend, once, result, defaults as getDefaults, escape, iteratee as createIteratee, isEqual, has, defer,\r\n  invert, omit, pick, isArray, isString, isFunction, isEmpty, isRegExp, isObject, negate, invoke, max, min, first, initial,\r\n  last, rest, without, difference, findLastIndex, shuffle, sample, partition, sortBy, countBy, indexBy, groupBy, matches} from 'underscore';\r\n\r\n// Initial Setup\r\n// -------------\r\n\r\n// Create a local reference to a common array method we'll want to use later.\r\nvar slice = Array.prototype.slice;\r\n\r\n// Underscore like keys function\r\nvar keys = function(obj) {\r\n  return obj ? Object.keys(obj) : [];\r\n};\r\n\r\n// try to get a prop from instance, with fallback to constructor (class property)\r\nvar getClassProp = function(obj, prop) {\r\n  var value = obj[prop];\r\n  return typeof value === 'function' ? value.call(obj) : value ? value : obj.constructor[prop];\r\n};\r\n\r\n// Current version of the library. Keep in sync with `package.json`.\r\nvar VERSION = '1.3.3';\r\n\r\n\r\n// Backbone.Events\r\n// ---------------\r\n\r\n// A class to provide a custom event channel. You may bind a callback to an event with `on` or\r\n// remove with `off`; `trigger`-ing an event fires all callbacks in succession.\r\n// It can be be also mixed in to *any object* in order\r\n//     var object = {};\r\n//     Backbone.Events.extend(object);\r\n//     object.on('expand', function(){ alert('expanded'); });\r\n//     object.trigger('expand');\r\n//\r\n\r\n// Regular expression used to split event strings.\r\nvar eventSplitter = /\\s+/;\r\n\r\n// A private global variable to share between listeners and listenees.\r\nvar _listening;\r\n\r\n// Iterates over the standard `event, callback` (as well as the fancy multiple\r\n// space-separated events `\"change blur\", callback` and jQuery-style event\r\n// maps `{event: callback}`).\r\nvar eventsApi = function(iteratee, events, name, callback, opts) {\r\n  var i = 0, names;\r\n  if (name && typeof name === 'object') {\r\n    // Handle event maps.\r\n    if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\r\n    for (names = keys(name); i < names.length ; i++) {\r\n      events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\r\n    }\r\n  } else if (name && eventSplitter.test(name)) {\r\n    // Handle space-separated event names by delegating them individually.\r\n    for (names = name.split(eventSplitter); i < names.length; i++) {\r\n      events = iteratee(events, names[i], callback, opts);\r\n    }\r\n  } else {\r\n    // Finally, standard events.\r\n    events = iteratee(events, name, callback, opts);\r\n  }\r\n  return events;\r\n};\r\n\r\n\r\n// The reducing API that adds a callback to the `events` object.\r\nvar onApi = function(events, name, callback, options) {\r\n  if (callback) {\r\n    var handlers = events[name] || (events[name] = []);\r\n    var context = options.context, ctx = options.ctx, listening = options.listening;\r\n    if (listening) listening.count++;\r\n\r\n    handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\r\n  }\r\n  return events;\r\n};\r\n\r\n// An try-catch guarded #on function, to prevent poisoning the global\r\n// `_listening` variable.\r\nvar tryCatchOn = function(obj, name, callback, context) {\r\n  try {\r\n    obj.on(name, callback, context);\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n\r\n// The reducing API that removes a callback from the `events` object.\r\nvar offApi = function(events, name, callback, options) {\r\n  if (!events) return;\r\n\r\n  var context = options.context, listeners = options.listeners;\r\n  var i = 0, names;\r\n\r\n  // Delete all event listeners and \"drop\" events.\r\n  if (!name && !context && !callback) {\r\n    for (names = keys(listeners); i < names.length; i++) {\r\n      listeners[names[i]].cleanup();\r\n    }\r\n    return;\r\n  }\r\n\r\n  names = name ? [name] : keys(events);\r\n  for (; i < names.length; i++) {\r\n    name = names[i];\r\n    var handlers = events[name];\r\n\r\n    // Bail out if there are no events stored.\r\n    if (!handlers) break;\r\n\r\n    // Find any remaining events.\r\n    var remaining = [];\r\n    for (var j = 0; j < handlers.length; j++) {\r\n      var handler = handlers[j];\r\n      if (\r\n        callback && callback !== handler.callback &&\r\n            callback !== handler.callback._callback ||\r\n              context && context !== handler.context\r\n      ) {\r\n        remaining.push(handler);\r\n      } else {\r\n        var listening = handler.listening;\r\n        if (listening) listening.off(name, callback);\r\n      }\r\n    }\r\n\r\n    // Replace events if there are any remaining.  Otherwise, clean up.\r\n    if (remaining.length) {\r\n      events[name] = remaining;\r\n    } else {\r\n      delete events[name];\r\n    }\r\n  }\r\n\r\n  return events;\r\n};\r\n\r\n// Reduces the event callbacks into a map of `{event: onceWrapper}`.\r\n// `offer` unbinds the `onceWrapper` after it has been called.\r\nvar onceMap = function(map, name, callback, offer) {\r\n  if (callback) {\r\n    var fn = map[name] = once(function() {\r\n      offer(name, fn);\r\n      callback.apply(this, arguments);\r\n    });\r\n    fn._callback = callback;\r\n  }\r\n  return map;\r\n};\r\n\r\n// Handles triggering the appropriate event callbacks.\r\nvar triggerApi = function(objEvents, name, callback, args) {\r\n  if (objEvents) {\r\n    var events = objEvents[name];\r\n    var allEvents = objEvents.all;\r\n    if (events && allEvents) allEvents = allEvents.slice();\r\n    if (events) triggerEvents(events, args);\r\n    if (allEvents) triggerEvents(allEvents, [name].concat(args));\r\n  }\r\n  return objEvents;\r\n};\r\n\r\n// A difficult-to-believe, but optimized internal dispatch function for\r\n// triggering events. Tries to keep the usual cases speedy (most internal\r\n// Backbone events have 3 arguments).\r\nvar triggerEvents = function(events, args) {\r\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\r\n  switch (args.length) {\r\n    case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\r\n    case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\r\n    case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\r\n    case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\r\n    default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\r\n  }\r\n};\r\n\r\nvar eventsMethods = ['on', 'listenTo', 'off', 'stopListening', 'once', 'listenToOnce', 'trigger'];\r\n\r\nclass Events {\r\n  // Extend an object with Events methods\r\n  static extend(obj) {\r\n    eventsMethods.forEach(method => {\r\n      obj[method] = Events.prototype[method];\r\n    });\r\n    return obj;\r\n  }\r\n\r\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\r\n  // the callback to all events fired.\r\n  on(name, callback, context) {\r\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\r\n      context: context,\r\n      ctx: this,\r\n      listening: _listening\r\n    });\r\n\r\n    if (_listening) {\r\n      var listeners = this._listeners || (this._listeners = {});\r\n      listeners[_listening.id] = _listening;\r\n      // Allow the listening to use a counter, instead of tracking\r\n      // callbacks for library interop\r\n      _listening.interop = false;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\r\n  // an event in another object... keeping track of what it's listening to\r\n  // for easier unbinding later.\r\n  listenTo(obj, name, callback) {\r\n    if (!obj) return this;\r\n    var id = obj._listenId || (obj._listenId = uniqueId('l'));\r\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\r\n    var listening = _listening = listeningTo[id];\r\n\r\n    // This object is not listening to any other events on `obj` yet.\r\n    // Setup the necessary references to track the listening callbacks.\r\n    if (!listening) {\r\n      this._listenId || (this._listenId = uniqueId('l'));\r\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\r\n    }\r\n\r\n    // Bind callbacks on obj.\r\n    var error = tryCatchOn(obj, name, callback, this);\r\n    _listening = void 0;\r\n\r\n    if (error) throw error;\r\n    // If the target obj is not Backbone.Events, track events manually.\r\n    if (listening.interop) listening.on(name, callback);\r\n\r\n    return this;\r\n  }\r\n\r\n  // Remove one or many callbacks. If `context` is null, removes all\r\n  // callbacks with that function. If `callback` is null, removes all\r\n  // callbacks for the event. If `name` is null, removes all bound\r\n  // callbacks for all events.\r\n  off(name, callback, context) {\r\n    if (!this._events) return this;\r\n    this._events = eventsApi(offApi, this._events, name, callback, {\r\n      context: context,\r\n      listeners: this._listeners\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  // Tell this object to stop listening to either specific events ... or\r\n  // to every object it's currently listening to.\r\n  stopListening(obj, name, callback) {\r\n    var listeningTo = this._listeningTo;\r\n    if (!listeningTo) return this;\r\n\r\n    var ids = obj ? [obj._listenId] : keys(listeningTo);\r\n    for (var i = 0; i < ids.length; i++) {\r\n      var listening = listeningTo[ids[i]];\r\n\r\n      // If listening doesn't exist, this object is not currently\r\n      // listening to obj. Break out early.\r\n      if (!listening) break;\r\n\r\n      listening.obj.off(name, callback, this);\r\n      if (listening.interop) listening.off(name, callback);\r\n    }\r\n    if (isEmpty(listeningTo)) this._listeningTo = void 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  // Bind an event to only be triggered a single time. After the first time\r\n  // the callback is invoked, its listener will be removed. If multiple events\r\n  // are passed in using the space-separated syntax, the handler will fire\r\n  // once for each event, not once for a combination of all events.\r\n  once(name, callback, context) {\r\n  // Map the event into a `{event: once}` object.\r\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\r\n    if (typeof name === 'string' && context == null) callback = void 0;\r\n    return this.on(events, callback, context);\r\n  }\r\n\r\n  // Inversion-of-control versions of `once`.\r\n  listenToOnce(obj, name, callback) {\r\n  // Map the event into a `{event: once}` object.\r\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\r\n    return this.listenTo(obj, events);\r\n  }\r\n\r\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\r\n  // passed the same arguments as `trigger` is, apart from the event name\r\n  // (unless you're listening on `\"all\"`, which will cause your callback to\r\n  // receive the true name of the event as the first argument).\r\n  trigger(name) {\r\n    if (!this._events) return this;\r\n\r\n    var length = Math.max(0, arguments.length - 1);\r\n    var args = Array(length);\r\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\r\n\r\n    eventsApi(triggerApi, this._events, name, void 0, args);\r\n    return this;\r\n  }\r\n}\r\n\r\n// ES class Events mixin\r\nvar withEvents = (Base) => {\r\n  var WithEventsClass = class extends Base {};\r\n  Events.extend(WithEventsClass.prototype);\r\n  return WithEventsClass;\r\n};\r\n\r\n// A listening class that tracks and cleans up memory bindings\r\n// when all callbacks have been offed.\r\nclass Listening {\r\n  constructor(listener, obj) {\r\n    this.id = listener._listenId;\r\n    this.listener = listener;\r\n    this.obj = obj;\r\n    this.interop = true;\r\n    this.count = 0;\r\n    this._events = void 0;\r\n  }\r\n\r\n  // Offs a callback (or several).\r\n  // Uses an optimized counter if the listenee uses Backbone.Events.\r\n  // Otherwise, falls back to manual tracking to support events\r\n  // library interop.\r\n\r\n  off(name, callback) {\r\n    var cleanup;\r\n    if (this.interop) {\r\n      this._events = eventsApi(offApi, this._events, name, callback, {\r\n        context: void 0,\r\n        listeners: void 0\r\n      });\r\n      cleanup = !this._events;\r\n    } else {\r\n      this.count--;\r\n      cleanup = this.count === 0;\r\n    }\r\n    if (cleanup) this.cleanup();\r\n  }\r\n\r\n  // Cleans up memory bindings between the listener and the listenee.\r\n  cleanup() {\r\n    delete this.listener._listeningTo[this.obj._listenId];\r\n    if (!this.interop) delete this.obj._listeners[this.id];\r\n  }\r\n}\r\n\r\nListening.prototype.on = Events.prototype.on;\r\n\r\n// Backbone.Model\r\n// --------------\r\n\r\n// Backbone **Models** are the basic data object in the framework --\r\n// frequently representing a row in a table in a database on your server.\r\n// A discrete chunk of data and a bunch of useful, related methods for\r\n// performing computations and transformations on that data.\r\n\r\n// Create a new model with the specified attributes. A client id (`cid`)\r\n// is automatically generated and assigned for you.\r\n\r\nclass Model extends Events {\r\n  // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n  // CouchDB users may want to set this to `\"_id\"`.\r\n  static idAttribute = 'id';\r\n\r\n  // The prefix is used to create the client id which is used to identify models locally.\r\n  // You may want to override this if you're experiencing name clashes with model ids.\r\n  static cidPrefix = 'c';\r\n\r\n  constructor(attributes, options) {\r\n    super();\r\n    // The value returned during the last failed validation.\r\n    this.validationError = null;\r\n    var attrs = attributes || {};\r\n    options || (options = {});\r\n    this.preinitialize.apply(this, arguments);\r\n    this.cid = uniqueId(this.constructor.cidPrefix);\r\n    this.attributes = {};\r\n    if (options.collection) this.collection = options.collection;\r\n    if (options.parse) attrs = this.parse(attrs, options) || {};\r\n    var defaults = result(this, 'defaults');\r\n    attrs = getDefaults(extend({}, defaults, attrs), defaults);\r\n    this.set(attrs, options);\r\n    // A hash of attributes whose current and previous value differ.\r\n    this.changed = {};\r\n    this.initialize.apply(this, arguments);\r\n  }\r\n\r\n  // preinitialize is an empty function by default. You can override it with a function\r\n  // or object.  preinitialize will run before any instantiation logic is run in the Model.\r\n  preinitialize(){}\r\n\r\n  // Initialize is an empty function by default. Override it with your own\r\n  // initialization logic.\r\n  initialize(){}\r\n\r\n  // Return a copy of the model's `attributes` object.\r\n  toJSON(options) {\r\n    return clone(this.attributes);\r\n  }\r\n\r\n  // Proxy `Backbone.sync` by default -- but override this if you need\r\n  // custom syncing semantics for *this* particular model.\r\n  sync() {\r\n    return sync.handler.apply(this, arguments);\r\n  }\r\n\r\n  // Get the value of an attribute.\r\n  get(attr) {\r\n    return this.attributes[attr];\r\n  }\r\n\r\n  // Get the HTML-escaped value of an attribute.\r\n  escape(attr) {\r\n    return escape(this.get(attr));\r\n  }\r\n\r\n  // Returns `true` if the attribute contains a value that is not null\r\n  // or undefined.\r\n  has(attr) {\r\n    return this.get(attr) != null;\r\n  }\r\n\r\n  // Special-cased proxy to underscore's `matches` method.\r\n  matches(attrs) {\r\n    return !!createIteratee(attrs, this)(this.attributes);\r\n  }\r\n\r\n  // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n  // the core primitive operation of a model, updating the data and notifying\r\n  // anyone who needs to know about the change in state. The heart of the beast.\r\n  set(key, val, options) {\r\n    if (key == null) return this;\r\n\r\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n    var attrs;\r\n    if (typeof key === 'object') {\r\n      attrs = key;\r\n      options = val;\r\n    } else {\r\n      (attrs = {})[key] = val;\r\n    }\r\n\r\n    options || (options = {});\r\n\r\n    // Run validation.\r\n    if (!this._validate(attrs, options)) return false;\r\n\r\n    // Extract attributes and options.\r\n    var unset      = options.unset;\r\n    var silent     = options.silent;\r\n    var reset      = options.reset;\r\n    var changes    = [];\r\n    var changing   = this._changing;\r\n    this._changing = true;\r\n\r\n    if (!changing) {\r\n      this._previousAttributes = clone(this.attributes);\r\n      this.changed = {};\r\n    }\r\n\r\n    var current = this.attributes;\r\n    var changed = this.changed;\r\n    var prev    = this._previousAttributes;\r\n\r\n    // For each `set` attribute, update or delete the current value.\r\n    for (var attr in attrs) {\r\n      val = attrs[attr];\r\n      if (!isEqual(current[attr], val)) changes.push(attr);\r\n      if (!isEqual(prev[attr], val)) {\r\n        changed[attr] = val;\r\n      } else {\r\n        delete changed[attr];\r\n      }\r\n      unset ? delete current[attr] : current[attr] = val;\r\n    }\r\n\r\n    if (reset) {\r\n      for (var currAttr in current) {\r\n        if (!(currAttr in attrs)) {\r\n          delete current[currAttr];\r\n          changes.push(currAttr);\r\n          changed[currAttr] = void 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Update the `id`.\r\n    var idAttribute = this.constructor.idAttribute;\r\n    if (idAttribute in attrs) this.id = this.get(idAttribute);\r\n\r\n    // Trigger all relevant attribute changes.\r\n    if (!silent) {\r\n      if (changes.length) this._pending = options;\r\n      for (var i = 0; i < changes.length; i++) {\r\n        this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n      }\r\n    }\r\n\r\n    // You might be wondering why there's a `while` loop here. Changes can\r\n    // be recursively nested within `\"change\"` events.\r\n    if (changing) return this;\r\n    if (!silent) {\r\n      while (this._pending) {\r\n        options = this._pending;\r\n        this._pending = false;\r\n        this.trigger('change', this, options);\r\n      }\r\n    }\r\n    this._pending = false;\r\n    this._changing = false;\r\n    return this;\r\n  }\r\n\r\n  // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n  // if the attribute doesn't exist.\r\n  unset(attr, options) {\r\n    return this.set(attr, void 0, extend({}, options, {unset: true}));\r\n  }\r\n\r\n  // Clear all attributes on the model, firing `\"change\"`.\r\n  clear(options) {\r\n    var attrs = {};\r\n    for (var key in this.attributes) attrs[key] = void 0;\r\n    return this.set(attrs, extend({}, options, {unset: true}));\r\n  }\r\n\r\n  // Determine if the model has changed since the last `\"change\"` event.\r\n  // If you specify an attribute name, determine if that attribute has changed.\r\n  hasChanged(attr) {\r\n    if (attr == null) return !isEmpty(this.changed);\r\n    return has(this.changed, attr);\r\n  }\r\n\r\n  // Return an object containing all the attributes that have changed, or\r\n  // false if there are no changed attributes. Useful for determining what\r\n  // parts of a view need to be updated and/or what attributes need to be\r\n  // persisted to the server. Unset attributes will be set to undefined.\r\n  // You can also pass an attributes object to diff against the model,\r\n  // determining if there *would be* a change.\r\n  changedAttributes(diff) {\r\n    if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n    var old = this._changing ? this._previousAttributes : this.attributes;\r\n    var changed = {};\r\n    var hasChanged;\r\n    for (var attr in diff) {\r\n      var val = diff[attr];\r\n      if (isEqual(old[attr], val)) continue;\r\n      changed[attr] = val;\r\n      hasChanged = true;\r\n    }\r\n    return hasChanged ? changed : false;\r\n  }\r\n\r\n  // Get the previous value of an attribute, recorded at the time the last\r\n  // `\"change\"` event was fired.\r\n  previous(attr) {\r\n    if (attr == null || !this._previousAttributes) return null;\r\n    return this._previousAttributes[attr];\r\n  }\r\n\r\n  // Get all of the attributes of the model at the time of the previous\r\n  // `\"change\"` event.\r\n  previousAttributes() {\r\n    return clone(this._previousAttributes);\r\n  }\r\n\r\n  // Fetch the model from the server, merging the response with the model's\r\n  // local attributes. Any changed attributes will trigger a \"change\" event.\r\n  fetch(options) {\r\n    options = extend({parse: true}, options);\r\n    var model = this;\r\n    var success = options.success;\r\n    options.success = function(resp) {\r\n      var serverAttrs = options.parse ? model.parse(resp, options) : resp;\r\n      if (!model.set(serverAttrs, options)) return false;\r\n      if (success) success.call(options.context, model, resp, options);\r\n      model.trigger('sync', model, resp, options);\r\n    };\r\n    wrapError(this, options);\r\n    return this.sync('read', this, options);\r\n  }\r\n\r\n  // Set a hash of model attributes, and sync the model to the server.\r\n  // If the server returns an attributes hash that differs, the model's\r\n  // state will be `set` again.\r\n  save(key, val, options) {\r\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n    var attrs;\r\n    if (key == null || typeof key === 'object') {\r\n      attrs = key;\r\n      options = val;\r\n    } else {\r\n      (attrs = {})[key] = val;\r\n    }\r\n\r\n    options = extend({validate: true, parse: true}, options);\r\n    var wait = options.wait;\r\n\r\n    // If we're not waiting and attributes exist, save acts as\r\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n    // the model will be valid when the attributes, if any, are set.\r\n    if (attrs && !wait) {\r\n      if (!this.set(attrs, options)) return false;\r\n    } else if (!this._validate(attrs, options)) {\r\n      return false;\r\n    }\r\n\r\n    // After a successful server-side save, the client is (optionally)\r\n    // updated with the server-side state.\r\n    var model = this;\r\n    var success = options.success;\r\n    var attributes = this.attributes;\r\n    options.success = function(resp) {\r\n      // Ensure attributes are restored during synchronous saves.\r\n      model.attributes = attributes;\r\n      var serverAttrs = options.parse ? model.parse(resp, options) : resp;\r\n      if (wait) serverAttrs = extend({}, attrs, serverAttrs);\r\n      if (serverAttrs && !model.set(serverAttrs, options)) return false;\r\n      if (success) success.call(options.context, model, resp, options);\r\n      model.trigger('sync', model, resp, options);\r\n    };\r\n    wrapError(this, options);\r\n\r\n    // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n    if (attrs && wait) this.attributes = extend({}, attributes, attrs);\r\n\r\n    var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\r\n    if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n    var xhr = this.sync(method, this, options);\r\n\r\n    // Restore attributes.\r\n    this.attributes = attributes;\r\n\r\n    return xhr;\r\n  }\r\n\r\n  // Destroy this model on the server if it was already persisted.\r\n  // Optimistically removes the model from its collection, if it has one.\r\n  // If `wait: true` is passed, waits for the server to respond before removal.\r\n  destroy(options) {\r\n    options = options ? clone(options) : {};\r\n    var model = this;\r\n    var success = options.success;\r\n    var wait = options.wait;\r\n\r\n    var destroy = function() {\r\n      model.stopListening();\r\n      model.trigger('destroy', model, model.collection, options);\r\n    };\r\n\r\n    options.success = function(resp) {\r\n      if (wait) destroy();\r\n      if (success) success.call(options.context, model, resp, options);\r\n      if (!model.isNew()) model.trigger('sync', model, resp, options);\r\n    };\r\n\r\n    var xhr = false;\r\n    if (this.isNew()) {\r\n      defer(options.success);\r\n    } else {\r\n      wrapError(this, options);\r\n      xhr = this.sync('delete', this, options);\r\n    }\r\n    if (!wait) destroy();\r\n    return xhr;\r\n  }\r\n\r\n  // Default URL for the model's representation on the server -- if you're\r\n  // using Backbone's restful methods, override this to change the endpoint\r\n  // that will be called.\r\n  url() {\r\n    var base =\r\n      result(this, 'urlRoot') ||\r\n      result(this.collection, 'url') ||\r\n      urlError();\r\n    if (this.isNew()) return base;\r\n    var id = this.get(this.constructor.idAttribute);\r\n    return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n  }\r\n\r\n  // **parse** converts a response into the hash of attributes to be `set` on\r\n  // the model. The default implementation is just to pass the response along.\r\n  parse(resp, options) {\r\n    return resp;\r\n  }\r\n\r\n  // Create a new model with identical attributes to this one.\r\n  clone() {\r\n    return new this.constructor(this.attributes);\r\n  }\r\n\r\n  // A model is new if it has never been saved to the server, and lacks an id.\r\n  isNew() {\r\n    return !this.has(this.constructor.idAttribute);\r\n  }\r\n\r\n  // Check if the model is currently in a valid state.\r\n  isValid(options) {\r\n    return this._validate({}, extend({}, options, {validate: true}));\r\n  }\r\n\r\n  // underscore methods\r\n  keys() {\r\n    return keys(this.attributes);\r\n  }\r\n\r\n  values() {\r\n    return Object.values(this.attributes);\r\n  }\r\n\r\n  pairs() {\r\n    return Object.entries(this.attributes);\r\n  }\r\n\r\n  entries() {\r\n    return Object.entries(this.attributes);\r\n  }\r\n\r\n  invert() {\r\n    return invert(this.attributes);\r\n  }\r\n\r\n  pick(...args) {\r\n    return pick(this.attributes, ...args);\r\n  }\r\n\r\n  omit(...args) {\r\n    return omit(this.attributes, ...args);\r\n  }\r\n\r\n  isEmpty() {\r\n    return isEmpty(this.attributes);\r\n  }\r\n\r\n  // Run validation against the next complete set of model attributes,\r\n  // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n  _validate(attrs, options) {\r\n    if (!options.validate || !this.validate) return true;\r\n    attrs = extend({}, this.attributes, attrs);\r\n    var error = this.validationError = this.validate(attrs, options) || null;\r\n    if (!error) return true;\r\n    this.trigger('invalid', this, error, extend(options, {validationError: error}));\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// Backbone.Collection\r\n// -------------------\r\n\r\n// If models tend to represent a single row of data, a Backbone Collection is\r\n// more analogous to a table full of data ... or a small slice or page of that\r\n// table, or a collection of rows that belong together for a particular reason\r\n// -- all of the messages in this particular folder, all of the documents\r\n// belonging to this particular author, and so on. Collections maintain\r\n// indexes of their models, both in order, and for lookup by `id`.\r\n\r\n// Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n// If a `comparator` is specified, the Collection will maintain\r\n// its models in sort order, as they're added and removed.\r\n\r\nclass Collection extends Events {\r\n  // The default model for a collection is just a **Backbone.Model**.\r\n  // This should be overridden in most cases.\r\n  static model = Model;\r\n\r\n  constructor(models, options) {\r\n    super();\r\n    options || (options = {});\r\n    this.preinitialize.apply(this, arguments);\r\n    if (options.model) this.model = options.model;\r\n    if (options.comparator !== void 0) this.comparator = options.comparator;\r\n    this._reset();\r\n    this.initialize.apply(this, arguments);\r\n    if (models) this.reset(models, extend({silent: true}, options));\r\n  }\r\n\r\n  // preinitialize is an empty function by default. You can override it with a function\r\n  // or object.  preinitialize will run before any instantiation logic is run in the Collection.\r\n  preinitialize(){}\r\n\r\n  // Initialize is an empty function by default. Override it with your own\r\n  // initialization logic.\r\n  initialize(){}\r\n\r\n  // The JSON representation of a Collection is an array of the\r\n  // models' attributes.\r\n  toJSON(options) {\r\n    return this.map(function(model) { return model.toJSON(options); });\r\n  }\r\n\r\n  // Proxy `Backbone.sync` by default.\r\n  sync() {\r\n    return sync.handler.apply(this, arguments);\r\n  }\r\n\r\n  // Add a model, or list of models to the set. `models` may be Backbone\r\n  // Models or raw JavaScript objects to be converted to Models, or any\r\n  // combination of the two.\r\n  add(models, options) {\r\n    return this.set(models, extend({merge: false}, options, addOptions));\r\n  }\r\n\r\n  // Remove a model, or a list of models from the set.\r\n  remove(models, options) {\r\n    options = extend({}, options);\r\n    var singular = !isArray(models);\r\n    models = singular ? [models] : models.slice();\r\n    var removed = this._removeModels(models, options);\r\n    if (!options.silent && removed.length) {\r\n      options.changes = {added: [], merged: [], removed: removed};\r\n      this.trigger('update', this, options);\r\n    }\r\n    return singular ? removed[0] : removed;\r\n  }\r\n\r\n  // Update a collection by `set`-ing a new list of models, adding new ones,\r\n  // removing models that are no longer present, and merging models that\r\n  // already exist in the collection, as necessary. Similar to **Model#set**,\r\n  // the core operation for updating the data contained by the collection.\r\n  set(models, options) {\r\n    if (models == null) return;\r\n\r\n    options = extend({}, setOptions, options);\r\n    if (options.parse && !this._isModel(models)) {\r\n      models = this.parse(models, options) || [];\r\n    }\r\n\r\n    var singular = !isArray(models);\r\n    models = singular ? [models] : models.slice();\r\n\r\n    var at = options.at;\r\n    if (at != null) at = +at;\r\n    if (at > this.length) at = this.length;\r\n    if (at < 0) at += this.length + 1;\r\n\r\n    var set = [];\r\n    var toAdd = [];\r\n    var toMerge = [];\r\n    var toRemove = [];\r\n    var modelMap = {};\r\n\r\n    var add = options.add;\r\n    var merge = options.merge;\r\n    var remove = options.remove;\r\n\r\n    var sort = false;\r\n    var sortable = this.comparator && at == null && options.sort !== false;\r\n    var sortAttr = isString(this.comparator) ? this.comparator : null;\r\n\r\n    // Turn bare objects into model references, and prevent invalid models\r\n    // from being added.\r\n    var model, i;\r\n    for (i = 0; i < models.length; i++) {\r\n      model = models[i];\r\n\r\n      // If a duplicate is found, prevent it from being added and\r\n      // optionally merge it into the existing model.\r\n      var existing = this.get(model);\r\n      if (existing) {\r\n        if (merge && model !== existing) {\r\n          var attrs = this._isModel(model) ? model.attributes : model;\r\n          if (options.parse) attrs = existing.parse(attrs, options);\r\n          existing.set(attrs, options);\r\n          toMerge.push(existing);\r\n          if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n        }\r\n        if (!modelMap[existing.cid]) {\r\n          modelMap[existing.cid] = true;\r\n          set.push(existing);\r\n        }\r\n        models[i] = existing;\r\n\r\n      // If this is a new, valid model, push it to the `toAdd` list.\r\n      } else if (add) {\r\n        model = models[i] = this._prepareModel(model, options);\r\n        if (model) {\r\n          toAdd.push(model);\r\n          this._addReference(model, options);\r\n          modelMap[model.cid] = true;\r\n          set.push(model);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove stale models.\r\n    if (remove) {\r\n      for (i = 0; i < this.length; i++) {\r\n        model = this.models[i];\r\n        if (!modelMap[model.cid]) toRemove.push(model);\r\n      }\r\n      if (toRemove.length) this._removeModels(toRemove, options);\r\n    }\r\n\r\n    // See if sorting is needed, update `length` and splice in new models.\r\n    var orderChanged = false;\r\n    var replace = !sortable && add && remove;\r\n    if (set.length && replace) {\r\n      orderChanged = this.length !== set.length || this.models.some(function(m, index) {\r\n        return m !== set[index];\r\n      });\r\n      this.models.length = 0;\r\n      splice(this.models, set, 0);\r\n      this.length = this.models.length;\r\n    } else if (toAdd.length) {\r\n      if (sortable) sort = true;\r\n      splice(this.models, toAdd, at == null ? this.length : at);\r\n      this.length = this.models.length;\r\n    }\r\n\r\n    // Silently sort the collection if appropriate.\r\n    if (sort) this.sort({silent: true});\r\n\r\n    // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n    if (!options.silent) {\r\n      for (i = 0; i < toAdd.length; i++) {\r\n        if (at != null) options.index = at + i;\r\n        model = toAdd[i];\r\n        model.trigger('add', model, this, options);\r\n      }\r\n      if (sort || orderChanged) this.trigger('sort', this, options);\r\n      if (toAdd.length || toRemove.length || toMerge.length) {\r\n        options.changes = {\r\n          added: toAdd,\r\n          removed: toRemove,\r\n          merged: toMerge\r\n        };\r\n        this.trigger('update', this, options);\r\n      }\r\n    }\r\n\r\n    // Return the added (or merged) model (or models).\r\n    return singular ? models[0] : models;\r\n  }\r\n\r\n  // When you have more items than you want to add or remove individually,\r\n  // you can reset the entire set with a new list of models, without firing\r\n  // any granular `add` or `remove` events. Fires `reset` when finished.\r\n  // Useful for bulk operations and optimizations.\r\n  reset(models, options) {\r\n    options = options ? clone(options) : {};\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this._removeReference(this.models[i], options);\r\n    }\r\n    options.previousModels = this.models;\r\n    this._reset();\r\n    models = this.add(models, extend({silent: true}, options));\r\n    if (!options.silent) this.trigger('reset', this, options);\r\n    return models;\r\n  }\r\n\r\n  // Add a model to the end of the collection.\r\n  push(model, options) {\r\n    return this.add(model, extend({at: this.length}, options));\r\n  }\r\n\r\n  // Remove a model from the end of the collection.\r\n  pop(options) {\r\n    var model = this.at(this.length - 1);\r\n    return this.remove(model, options);\r\n  }\r\n\r\n  // Add a model to the beginning of the collection.\r\n  unshift(model, options) {\r\n    return this.add(model, extend({at: 0}, options));\r\n  }\r\n\r\n  // Remove a model from the beginning of the collection.\r\n  shift(options) {\r\n    var model = this.at(0);\r\n    return this.remove(model, options);\r\n  }\r\n\r\n  // Slice out a sub-array of models from the collection.\r\n  slice() {\r\n    return slice.apply(this.models, arguments);\r\n  }\r\n\r\n  // Get a model from the set by id, cid, model object with id or cid\r\n  // properties, or an attributes object that is transformed through modelId.\r\n  get(obj) {\r\n    if (obj == null) return void 0;\r\n    return this._byId[obj] ||\r\n      this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\r\n      obj.cid && this._byId[obj.cid];\r\n  }\r\n\r\n  // Returns `true` if the model is in the collection.\r\n  has(obj) {\r\n    return this.get(obj) != null;\r\n  }\r\n\r\n  // Get the model at the given index.\r\n  at(index) {\r\n    if (index < 0) index += this.length;\r\n    return this.models[index];\r\n  }\r\n\r\n  // Return models with matching attributes. Useful for simple cases of\r\n  // `filter`.\r\n  where(attrs, firstItem) {\r\n    return this[firstItem ? 'find' : 'filter'](attrs);\r\n  }\r\n\r\n  // Return the first model with matching attributes. Useful for simple cases\r\n  // of `find`.\r\n  findWhere(attrs) {\r\n    return this.where(attrs, true);\r\n  }\r\n\r\n  // Force the collection to re-sort itself. You don't need to call this under\r\n  // normal circumstances, as the set will maintain sort order as each item\r\n  // is added.\r\n  sort(options) {\r\n    var comparator = this.comparator;\r\n    if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n    options || (options = {});\r\n\r\n    var length = comparator.length;\r\n    if (isFunction(comparator)) comparator = comparator.bind(this);\r\n\r\n    // Run sort based on type of `comparator`.\r\n    if (length === 1 || isString(comparator)) {\r\n      this.models = this.sortBy(comparator);\r\n    } else {\r\n      this.models.sort(comparator);\r\n    }\r\n    if (!options.silent) this.trigger('sort', this, options);\r\n    return this;\r\n  }\r\n\r\n  // Pluck an attribute from each model in the collection.\r\n  pluck(attr) {\r\n    return this.map(attr + '');\r\n  }\r\n\r\n  // Fetch the default set of models for this collection, resetting the\r\n  // collection when they arrive. If `reset: true` is passed, the response\r\n  // data will be passed through the `reset` method instead of `set`.\r\n  fetch(options) {\r\n    options = extend({parse: true}, options);\r\n    var success = options.success;\r\n    var collection = this;\r\n    options.success = function(resp) {\r\n      var method = options.reset ? 'reset' : 'set';\r\n      collection[method](resp, options);\r\n      if (success) success.call(options.context, collection, resp, options);\r\n      collection.trigger('sync', collection, resp, options);\r\n    };\r\n    wrapError(this, options);\r\n    return this.sync('read', this, options);\r\n  }\r\n\r\n  // Create a new instance of a model in this collection. Add the model to the\r\n  // collection immediately, unless `wait: true` is passed, in which case we\r\n  // wait for the server to agree.\r\n  create(model, options) {\r\n    options = options ? clone(options) : {};\r\n    var wait = options.wait;\r\n    model = this._prepareModel(model, options);\r\n    if (!model) return false;\r\n    if (!wait) this.add(model, options);\r\n    var collection = this;\r\n    var success = options.success;\r\n    options.success = function(m, resp, callbackOpts) {\r\n      if (wait) collection.add(m, callbackOpts);\r\n      if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n    };\r\n    model.save(null, options);\r\n    return model;\r\n  }\r\n\r\n  // **parse** converts a response into a list of models to be added to the\r\n  // collection. The default implementation is just to pass it through.\r\n  parse(resp, options) {\r\n    return resp;\r\n  }\r\n\r\n  // Create a new collection with an identical list of models as this one.\r\n  clone() {\r\n    return new this.constructor(this.models, {\r\n      model: this.model,\r\n      comparator: this.comparator\r\n    });\r\n  }\r\n\r\n  // Define how to uniquely identify models in the collection.\r\n  modelId(attrs) {\r\n    var model = this.model || this.constructor.model;\r\n    return attrs[model && model.idAttribute || 'id'];\r\n  }\r\n\r\n  // Get an iterator of all models in this collection.\r\n  values() {\r\n    return new CollectionIterator(this, ITERATOR_VALUES);\r\n  }\r\n\r\n  // Get an iterator of all model IDs in this collection.\r\n  keys() {\r\n    return new CollectionIterator(this, ITERATOR_KEYS);\r\n  }\r\n\r\n  // Get an iterator of all [ID, model] tuples in this collection.\r\n  entries() {\r\n    return new CollectionIterator(this, ITERATOR_KEYSVALUES);\r\n  }\r\n\r\n  forEach(iteratee, context) {\r\n    return this.models.forEach(iteratee, context);\r\n  }\r\n\r\n  each(iteratee, context) {\r\n    return this.forEach(iteratee, context);\r\n  }\r\n\r\n  map(iteratee, context) {\r\n    return this.models.map(cb(iteratee, this), context);\r\n  }\r\n\r\n  reduce(...args) {\r\n    return this.models.reduce(...args);\r\n  }\r\n\r\n  reduceRight(...args) {\r\n    return this.models.reduceRight(...args);\r\n  }\r\n\r\n  find(predicate, context) {\r\n    return this.models.find(cb(predicate, this), context);\r\n  }\r\n\r\n  filter(predicate, context) {\r\n    return this.models.filter(cb(predicate, this), context);\r\n  }\r\n\r\n  reject(predicate, context) {\r\n    return this.models.filter(negate(cb(predicate, this)), context);\r\n  }\r\n\r\n  every(predicate, context) {\r\n    return this.models.every(cb(predicate, this), context);\r\n  }\r\n\r\n  some(predicate, context) {\r\n    return this.models.some(cb(predicate, this), context);\r\n  }\r\n\r\n  includes(value, fromIndex) {\r\n    return this.models.includes(value, fromIndex);\r\n  }\r\n\r\n  contains(value, fromIndex) {\r\n    return this.includes(value, fromIndex);\r\n  }\r\n\r\n  invoke(...args) {\r\n    return invoke(this.models, ...args);\r\n  }\r\n\r\n  max(iteratee, context) {\r\n    return max(this.models, cb(iteratee, this), context);\r\n  }\r\n\r\n  min(iteratee, context) {\r\n    return min(this.models, cb(iteratee, this), context);\r\n  }\r\n\r\n  toArray() {\r\n    return this.models.slice();\r\n  }\r\n\r\n  size() {\r\n    return this.models.length;\r\n  }\r\n\r\n  first(n) {\r\n    return first(this.models, n);\r\n  }\r\n\r\n  take(n) {\r\n    return first(this.models, n);\r\n  }\r\n\r\n  initial(n) {\r\n    return initial(this.models, n);\r\n  }\r\n\r\n  last(n) {\r\n    return last(this.models, n);\r\n  }\r\n\r\n  rest(index) {\r\n    return rest(this.models, index);\r\n  }\r\n\r\n  drop(index) {\r\n    return rest(this.models, index);\r\n  }\r\n\r\n  without(...args) {\r\n    return without(this.models, ...args);\r\n  }\r\n\r\n  difference(...args) {\r\n    return difference(this.models, ...args);\r\n  }\r\n\r\n  indexOf(model, fromIndex) {\r\n    return this.models.indexOf(model, fromIndex);\r\n  }\r\n\r\n  lastIndexOf(model, fromIndex) {\r\n    return this.models.lastIndexOf(model, fromIndex);\r\n  }\r\n\r\n  findIndex(predicate, context) {\r\n    return this.models.findIndex(cb(predicate, this), context);\r\n  }\r\n\r\n  findLastIndex(predicate, context) {\r\n    return findLastIndex(this.models, cb(predicate, this), context);\r\n  }\r\n\r\n  shuffle() {\r\n    return shuffle(this.models);\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.models.length === 0;\r\n  }\r\n\r\n  sample(n) {\r\n    return sample(this.models, n);\r\n  }\r\n\r\n  partition(predicate) {\r\n    return partition(this.models, cb(predicate, this));\r\n  }\r\n\r\n  groupBy(predicate, context) {\r\n    return groupBy(this.models, cb(predicate, this), context);\r\n  }\r\n\r\n  indexBy(predicate, context) {\r\n    return indexBy(this.models, cb(predicate, this), context);\r\n  }\r\n\r\n  sortBy(predicate, context) {\r\n    return sortBy(this.models, cb(predicate, this), context);\r\n  }\r\n\r\n  countBy(predicate, context) {\r\n    return countBy(this.models, cb(predicate, this), context);\r\n  }\r\n\r\n  // Private method to reset all internal state. Called when the collection\r\n  // is first initialized or reset.\r\n  _reset() {\r\n    this.length = 0;\r\n    this.models = [];\r\n    this._byId  = {};\r\n  }\r\n\r\n  // Prepare a hash of attributes (or other model) to be added to this\r\n  // collection.\r\n  _prepareModel(attrs, options) {\r\n    if (this._isModel(attrs)) {\r\n      if (!attrs.collection) attrs.collection = this;\r\n      return attrs;\r\n    }\r\n    options = options ? clone(options) : {};\r\n    options.collection = this;\r\n    var modelClass = this.model || this.constructor.model;\r\n    var model = modelClass.prototype instanceof Model || modelClass === Model ? new modelClass(attrs, options) : modelClass(attrs, options);\r\n    if (!model.validationError) return model;\r\n    this.trigger('invalid', this, model.validationError, options);\r\n    return false;\r\n  }\r\n\r\n  // Internal method called by both remove and set.\r\n  _removeModels(models, options) {\r\n    var removed = [];\r\n    for (var i = 0; i < models.length; i++) {\r\n      var model = this.get(models[i]);\r\n      if (!model) continue;\r\n\r\n      var index = this.indexOf(model);\r\n      this.models.splice(index, 1);\r\n      this.length--;\r\n\r\n      // Remove references before triggering 'remove' event to prevent an\r\n      // infinite loop. #3693\r\n      delete this._byId[model.cid];\r\n      var id = this.modelId(model.attributes);\r\n      if (id != null) delete this._byId[id];\r\n\r\n      if (!options.silent) {\r\n        options.index = index;\r\n        model.trigger('remove', model, this, options);\r\n      }\r\n\r\n      removed.push(model);\r\n      this._removeReference(model, options);\r\n    }\r\n    return removed;\r\n  }\r\n\r\n  // Method for checking whether an object should be considered a model for\r\n  // the purposes of adding to the collection.\r\n  _isModel(model) {\r\n    return model instanceof Model;\r\n  }\r\n\r\n  // Internal method to create a model's ties to a collection.\r\n  _addReference(model, options) {\r\n    this._byId[model.cid] = model;\r\n    var id = this.modelId(model.attributes);\r\n    if (id != null) this._byId[id] = model;\r\n    model.on('all', this._onModelEvent, this);\r\n  }\r\n\r\n  // Internal method to sever a model's ties to a collection.\r\n  _removeReference(model, options) {\r\n    delete this._byId[model.cid];\r\n    var id = this.modelId(model.attributes);\r\n    if (id != null) delete this._byId[id];\r\n    if (this === model.collection) delete model.collection;\r\n    model.off('all', this._onModelEvent, this);\r\n  }\r\n\r\n  // Internal method called every time a model in the set fires an event.\r\n  // Sets need to update their indexes when models change ids. All other\r\n  // events simply proxy through. \"add\" and \"remove\" events that originate\r\n  // in other collections are ignored.\r\n  _onModelEvent(event, model, collection, options) {\r\n    if (model) {\r\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n      if (event === 'destroy') this.remove(model, options);\r\n      if (event === 'change') {\r\n        var prevId = this.modelId(model.previousAttributes());\r\n        var id = this.modelId(model.attributes);\r\n        if (prevId !== id) {\r\n          if (prevId != null) delete this._byId[prevId];\r\n          if (id != null) this._byId[id] = model;\r\n        }\r\n      }\r\n    }\r\n    this.trigger.apply(this, arguments);\r\n  }\r\n}\r\n\r\n\r\n// Default options for `Collection#set`.\r\nvar setOptions = {add: true, remove: true, merge: true};\r\nvar addOptions = {add: true, remove: false};\r\n\r\n// Splices `insert` into `array` at index `at`.\r\nvar splice = function(array, insert, at) {\r\n  at = Math.min(Math.max(at, 0), array.length);\r\n  var tail = Array(array.length - at);\r\n  var length = insert.length;\r\n  var i;\r\n  for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n  for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n  for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n};\r\n\r\n// Defining an @@iterator method implements JavaScript's Iterable protocol.\r\n// In modern ES2015 browsers, this value is found at Symbol.iterator.\r\n/* global Symbol */\r\nvar $$iterator = typeof Symbol === 'function' && Symbol.iterator;\r\nif ($$iterator) {\r\n  Collection.prototype[$$iterator] = Collection.prototype.values;\r\n}\r\n\r\n// CollectionIterator\r\n// ------------------\r\n\r\n// A CollectionIterator implements JavaScript's Iterator protocol, allowing the\r\n// use of `for of` loops in modern browsers and interoperation between\r\n// Backbone.Collection and other JavaScript functions and third-party libraries\r\n// which can operate on Iterables.\r\nvar CollectionIterator = function(collection, kind) {\r\n  this._collection = collection;\r\n  this._kind = kind;\r\n  this._index = 0;\r\n};\r\n\r\n// This \"enum\" defines the three possible kinds of values which can be emitted\r\n// by a CollectionIterator that correspond to the values(), keys() and entries()\r\n// methods on Collection, respectively.\r\nvar ITERATOR_VALUES = 1;\r\nvar ITERATOR_KEYS = 2;\r\nvar ITERATOR_KEYSVALUES = 3;\r\n\r\n// All Iterators should themselves be Iterable.\r\nif ($$iterator) {\r\n  CollectionIterator.prototype[$$iterator] = function() {\r\n    return this;\r\n  };\r\n}\r\n\r\nCollectionIterator.prototype.next = function() {\r\n  if (this._collection) {\r\n\r\n    // Only continue iterating if the iterated collection is long enough.\r\n    if (this._index < this._collection.length) {\r\n      var model = this._collection.at(this._index);\r\n      this._index++;\r\n\r\n      // Construct a value depending on what kind of values should be iterated.\r\n      var value;\r\n      if (this._kind === ITERATOR_VALUES) {\r\n        value = model;\r\n      } else {\r\n        var id = this._collection.modelId(model.attributes);\r\n        if (this._kind === ITERATOR_KEYS) {\r\n          value = id;\r\n        } else { // ITERATOR_KEYSVALUES\r\n          value = [id, model];\r\n        }\r\n      }\r\n      return {value: value, done: false};\r\n    }\r\n\r\n    // Once exhausted, remove the reference to the collection so future\r\n    // calls to the next method always return done.\r\n    this._collection = void 0;\r\n  }\r\n\r\n  return {value: void 0, done: true};\r\n};\r\n\r\n// Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\nvar cb = function(iteratee, instance) {\r\n  if (isFunction(iteratee)) return iteratee;\r\n  if (isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n  if (isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n  return iteratee;\r\n};\r\n\r\nvar modelMatcher = function(attrs) {\r\n  var matcher = matches(attrs);\r\n  return function(model) {\r\n    return matcher(model.attributes);\r\n  };\r\n};\r\n\r\n// Backbone.sync\r\n// -------------\r\n\r\n// Override this function to change the manner in which Backbone persists\r\n// models to the server. You will be passed the type of request, and the\r\n// model in question. By default, makes a RESTful Ajax request\r\n// to the model's `url()`. Some possible customizations could be:\r\n//\r\n// * Use `setTimeout` to batch rapid-fire updates into a single request.\r\n// * Send up the models as XML instead of JSON.\r\n// * Persist models via WebSockets instead of Ajax.\r\n\r\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\nvar methodMap = {\r\n  create: 'POST',\r\n  update: 'PUT',\r\n  patch: 'PATCH',\r\n  delete: 'DELETE',\r\n  read: 'GET'\r\n};\r\n\r\nvar sync = {\r\n  handler: function(method, model, options) {\r\n    var type = methodMap[method];\r\n\r\n    options || (options = {});\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = result(model, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\r\n    }\r\n\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET') {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax.handler(extend(params, options));\r\n    model.trigger('request', model, xhr, options);\r\n    return xhr;\r\n  }\r\n};\r\n\r\n// Backbone.ajax\r\n// -------------\r\n\r\n// Default implementation based on `fetch` API\r\n\r\nvar stringifyGETParams = function(url, data) {\r\n  var query = '';\r\n  for (var key in data) {\r\n    if (data[key] == null) continue;\r\n    query += '&'\r\n      + encodeURIComponent(key) + '='\r\n      + encodeURIComponent(data[key]);\r\n  }\r\n  if (query) url += (~url.indexOf('?') ? '&' : '?') + query.substring(1);\r\n  return url;\r\n};\r\n\r\nvar getData = function(response, dataType) {\r\n  return dataType === 'json' ? response.json() : response.text();\r\n};\r\n\r\n\r\n// Override handler method to customize ajax functionality.\r\nvar ajax = {\r\n  handler: function(options) {\r\n    if (options.type === 'GET' && typeof options.data === 'object') {\r\n      options.url = stringifyGETParams(options.url, options.data);\r\n      delete options.data;\r\n    }\r\n\r\n    getDefaults(options, {\r\n      method: options.type,\r\n      headers: getDefaults(options.headers || {}, {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: options.data\r\n    });\r\n\r\n    return fetch(options.url, options)\r\n      .then(function(response) {\r\n        var promise = getData(response, options.dataType);\r\n\r\n        if (response.ok) return promise;\r\n\r\n        var error = new Error(response.statusText);\r\n        return promise.then(function(responseData) {\r\n          error.response = response;\r\n          error.responseData = responseData;\r\n          if (options.error) options.error(error);\r\n          throw error;\r\n        });\r\n      })\r\n      .then(function(responseData) {\r\n        if (options.success) options.success(responseData);\r\n        return responseData;\r\n      });\r\n  }\r\n};\r\n\r\n\r\n// Backbone.Router\r\n// ---------------\r\n\r\n// Routers map faux-URLs to actions, and fire events when routes are\r\n// matched. Creating a new one sets its `routes` hash, if not set statically.\r\n\r\nclass Router extends Events {\r\n  constructor(options) {\r\n    super();\r\n    options || (options = {});\r\n    this.preinitialize.apply(this, arguments);\r\n    if (options.routes) this.routes = options.routes;\r\n    this._bindRoutes();\r\n    this.initialize.apply(this, arguments);\r\n  }\r\n\r\n  // preinitialize is an empty function by default. You can override it with a function\r\n  // or object.  preinitialize will run before any instantiation logic is run in the Router.\r\n  preinitialize(){}\r\n\r\n  // Initialize is an empty function by default. Override it with your own\r\n  // initialization logic.\r\n  initialize(){}\r\n\r\n  // Manually bind a single named route to a callback. For example:\r\n  //\r\n  //     this.route('search/:query/p:num', 'search', function(query, num) {\r\n  //       ...\r\n  //     });\r\n  //\r\n  route(route, name, callback) {\r\n    if (!isRegExp(route)) route = this._routeToRegExp(route);\r\n    if (isFunction(name)) {\r\n      callback = name;\r\n      name = '';\r\n    }\r\n    if (!callback) callback = this[name];\r\n    var router = this;\r\n    History.instance.route(route, function(fragment) {\r\n      var args = router._extractParameters(route, fragment);\r\n      if (router.execute(callback, args, name) !== false) {\r\n        router.trigger.apply(router, ['route:' + name].concat(args));\r\n        router.trigger('route', name, args);\r\n        History.instance.trigger('route', router, name, args);\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  // Execute a route handler with the provided parameters.  This is an\r\n  // excellent place to do pre-route setup or post-route cleanup.\r\n  execute(callback, args, name) {\r\n    if (callback) callback.apply(this, args);\r\n  }\r\n\r\n  // Simple proxy to `Backbone.history` to save a fragment into the history.\r\n  navigate(fragment, options) {\r\n    History.instance.navigate(fragment, options);\r\n    return this;\r\n  }\r\n\r\n  // Bind all defined routes to `Backbone.history`. We have to reverse the\r\n  // order of the routes here to support behavior where the most general\r\n  // routes can be defined at the bottom of the route map.\r\n  _bindRoutes() {\r\n    var routes = getClassProp(this, 'routes');\r\n    if (!routes) return;\r\n    this.routes = routes;\r\n    var routeKey, routeKeys = keys(this.routes);\r\n    while ((routeKey = routeKeys.pop()) != null) {\r\n      this.route(routeKey, this.routes[routeKey]);\r\n    }\r\n  }\r\n\r\n  // Convert a route string into a regular expression, suitable for matching\r\n  // against the current location hash.\r\n  _routeToRegExp(route) {\r\n    route = route.replace(escapeRegExp, '\\\\$&')\r\n      .replace(optionalParam, '(?:$1)?')\r\n      .replace(namedParam, function(match, optional) {\r\n        return optional ? match : '([^/?]+)';\r\n      })\r\n      .replace(splatParam, '([^?]*?)');\r\n    return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\r\n  }\r\n\r\n  // Given a route, and a URL fragment that it matches, return the array of\r\n  // extracted decoded parameters. Empty or unmatched parameters will be\r\n  // treated as `null` to normalize cross-browser behavior.\r\n  _extractParameters(route, fragment) {\r\n    var params = route.exec(fragment).slice(1);\r\n    return params.map(function(param, i) {\r\n      // Don't decode the search params.\r\n      if (i === params.length - 1) return param || null;\r\n      return param ? decodeURIComponent(param) : null;\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// Cached regular expressions for matching named param parts and splatted\r\n// parts of route strings.\r\nvar optionalParam = /\\((.*?)\\)/g;\r\nvar namedParam    = /(\\(\\?)?:\\w+/g;\r\nvar splatParam    = /\\*\\w+/g;\r\nvar escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n\r\n// Backbone.History\r\n// ----------------\r\n\r\n// Handles cross-browser history management, based on either\r\n// [pushState](http://diveintohtml5.info/history.html) and real URLs, or\r\n// [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\r\n// and URL fragments. If the browser supports neither (old IE, natch),\r\n// falls back to polling.\r\n\r\nclass History extends Events {\r\n  // Create the default Backbone.history.\r\n  static get instance() {\r\n    return this._instance || (this._instance = new History());\r\n  }\r\n\r\n  static set instance(value) {\r\n    this._instance = value;\r\n  }\r\n\r\n  static start() {\r\n    this.instance.start();\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    // The default interval to poll for hash changes, if necessary, is\r\n    // twenty times a second.\r\n    this.interval = 50;\r\n    this.handlers = [];\r\n    this.checkUrl = this.checkUrl.bind(this);\r\n\r\n    // Ensure that `History` can be used outside of the browser.\r\n    if (typeof window !== 'undefined') {\r\n      this.location = window.location;\r\n      this.history = window.history;\r\n    }\r\n  }\r\n  // Are we at the app root?\r\n  atRoot() {\r\n    var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\r\n    return path === this.root && !this.getSearch();\r\n  }\r\n\r\n  // Does the pathname match the root?\r\n  matchRoot() {\r\n    var path = this.decodeFragment(this.location.pathname);\r\n    var rootPath = path.slice(0, this.root.length - 1) + '/';\r\n    return rootPath === this.root;\r\n  }\r\n\r\n  // Unicode characters in `location.pathname` are percent encoded so they're\r\n  // decoded for comparison. `%25` should not be decoded since it may be part\r\n  // of an encoded parameter.\r\n  decodeFragment(fragment) {\r\n    return decodeURI(fragment.replace(/%25/g, '%2525'));\r\n  }\r\n\r\n  // In IE6, the hash fragment and search params are incorrect if the\r\n  // fragment contains `?`.\r\n  getSearch() {\r\n    var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\r\n    return match ? match[0] : '';\r\n  }\r\n\r\n  // Gets the true hash value. Cannot use location.hash directly due to bug\r\n  // in Firefox where location.hash will always be decoded.\r\n  getHash(window) {\r\n    var match = (window || this).location.href.match(/#(.*)$/);\r\n    return match ? match[1] : '';\r\n  }\r\n\r\n  // Get the pathname and search params, without the root.\r\n  getPath() {\r\n    var path = this.decodeFragment(\r\n      this.location.pathname + this.getSearch()\r\n    ).slice(this.root.length - 1);\r\n    return path.charAt(0) === '/' ? path.slice(1) : path;\r\n  }\r\n\r\n  // Get the cross-browser normalized URL fragment from the path or hash.\r\n  getFragment(fragment) {\r\n    if (fragment == null) {\r\n      if (this._usePushState || !this._useHashChange) {\r\n        fragment = this.getPath();\r\n      } else {\r\n        fragment = this.getHash();\r\n      }\r\n    }\r\n    return fragment.replace(routeStripper, '');\r\n  }\r\n\r\n  // Start the hash change handling, returning `true` if the current URL matches\r\n  // an existing route, and `false` otherwise.\r\n  start(options) {\r\n    if (History.started) throw new Error('Backbone.history has already been started');\r\n    History.started = true;\r\n\r\n    // Figure out the initial configuration.\r\n    // Is pushState desired ... is it available?\r\n    this.options          = extend({root: '/'}, this.options, options);\r\n    this.root             = this.options.root;\r\n    this._useHashChange   = this.options.hashChange !== false;\r\n    this._usePushState    = !!this.options.pushState;\r\n    this.fragment         = this.getFragment();\r\n\r\n    // Normalize root to always include a leading and trailing slash.\r\n    this.root = ('/' + this.root + '/').replace(rootStripper, '/');\r\n\r\n    // Transition from hashChange to pushState or vice versa if both are\r\n    // requested.\r\n    if (this._useHashChange && this._usePushState) {\r\n      // If we've started out with a hash-based route, but we're currently\r\n      // in a browser where it could be `pushState`-based instead...\r\n      if (this.atRoot()) {\r\n        this.navigate(this.getHash(), {replace: true});\r\n      }\r\n    }\r\n\r\n    var addEventListener = window.addEventListener;\r\n\r\n    // Depending on whether we're using pushState or hashes, and whether\r\n    // 'onhashchange' is supported, determine how we check the URL state.\r\n    if (this._usePushState) {\r\n      addEventListener('popstate', this.checkUrl, false);\r\n    } else if (this._useHashChange) {\r\n      addEventListener('hashchange', this.checkUrl, false);\r\n    }\r\n\r\n    if (!this.options.silent) return this.loadUrl();\r\n  }\r\n\r\n  // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n  // but possibly useful for unit testing Routers.\r\n  stop() {\r\n    var removeEventListener = window.removeEventListener;\r\n\r\n    // Remove window listeners.\r\n    if (this._usePushState) {\r\n      removeEventListener('popstate', this.checkUrl, false);\r\n    } else if (this._useHashChange) {\r\n      removeEventListener('hashchange', this.checkUrl, false);\r\n    }\r\n\r\n    History.started = false;\r\n  }\r\n\r\n  // Add a route to be tested when the fragment changes. Routes added later\r\n  // may override previous routes.\r\n  route(route, callback) {\r\n    this.handlers.unshift({route: route, callback: callback});\r\n  }\r\n\r\n  // Checks the current URL to see if it has changed, and if it has,\r\n  // calls `loadUrl`.\r\n  checkUrl(e) {\r\n    var current = this.getFragment();\r\n\r\n    if (current === this.fragment) return false;\r\n    this.loadUrl();\r\n  }\r\n\r\n  // Attempt to load the current URL fragment. If a route succeeds with a\r\n  // match, returns `true`. If no defined routes matches the fragment,\r\n  // returns `false`.\r\n  loadUrl(fragment) {\r\n    // If the root doesn't match, no routes can match either.\r\n    if (!this.matchRoot()) return false;\r\n    fragment = this.fragment = this.getFragment(fragment);\r\n    return this.handlers.some(function(handler) {\r\n      if (handler.route.test(fragment)) {\r\n        handler.callback(fragment);\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Save a fragment into the hash history, or replace the URL state if the\r\n  // 'replace' option is passed. You are responsible for properly URL-encoding\r\n  // the fragment in advance.\r\n  //\r\n  // The options object can contain `trigger: true` if you wish to have the\r\n  // route callback be fired (not usually desirable), or `replace: true`, if\r\n  // you wish to modify the current URL without adding an entry to the history.\r\n  navigate(fragment, options) {\r\n    if (!History.started) return false;\r\n    if (!options || options === true) options = {trigger: !!options};\r\n\r\n    // Normalize the fragment.\r\n    fragment = this.getFragment(fragment || '');\r\n\r\n    // Don't include a trailing slash on the root.\r\n    var rootPath = this.root;\r\n    if (fragment === '' || fragment.charAt(0) === '?') {\r\n      rootPath = rootPath.slice(0, -1) || '/';\r\n    }\r\n    var url = rootPath + fragment;\r\n\r\n    // Strip the fragment of the query and hash for matching.\r\n    fragment = fragment.replace(pathStripper, '');\r\n\r\n    // Decode for matching.\r\n    var decodedFragment = this.decodeFragment(fragment);\r\n\r\n    if (this.fragment === decodedFragment) return;\r\n    this.fragment = decodedFragment;\r\n\r\n    // If pushState is available, we use it to set the fragment as a real URL.\r\n    if (this._usePushState) {\r\n      this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n\r\n    // If hash changes haven't been explicitly disabled, update the hash\r\n    // fragment to store history.\r\n    } else if (this._useHashChange) {\r\n      this._updateHash(this.location, fragment, options.replace);\r\n\r\n    // If you've told us that you explicitly don't want fallback hashchange-\r\n    // based history, then `navigate` becomes a page refresh.\r\n    } else {\r\n      return this.location.assign(url);\r\n    }\r\n    if (options.trigger) return this.loadUrl(fragment);\r\n  }\r\n\r\n  // Update the hash location, either replacing the current entry, or adding\r\n  // a new one to the browser history.\r\n  _updateHash(location, fragment, replace) {\r\n    if (replace) {\r\n      var href = location.href.replace(/(javascript:|#).*$/, '');\r\n      location.replace(href + '#' + fragment);\r\n    } else {\r\n      // Some browsers require that `hash` contains a leading #.\r\n      location.hash = '#' + fragment;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Cached regex for stripping a leading hash/slash and trailing space.\r\nvar routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n// Cached regex for stripping leading and trailing slashes.\r\nvar rootStripper = /^\\/+|\\/+$/g;\r\n\r\n// Cached regex for stripping urls of hash.\r\nvar pathStripper = /#.*$/;\r\n\r\n\r\n// Helpers\r\n// -------\r\n\r\n// Throw an error when a URL is needed, and none is supplied.\r\nvar urlError = function() {\r\n  throw new Error('A \"url\" property or function must be specified');\r\n};\r\n\r\n// Wrap an optional error callback with a fallback error event.\r\nvar wrapError = function(model, options) {\r\n  var error = options.error;\r\n  options.error = function(resp) {\r\n    if (error) error.call(options.context, model, resp, options);\r\n    model.trigger('error', model, resp, options);\r\n  };\r\n};\r\n\r\nexport {\r\n  Model,\r\n  Collection,\r\n  Events,\r\n  sync,\r\n  ajax,\r\n  Router,\r\n  History,\r\n  VERSION\r\n};\r\n"]}